# Do not modify this file!	It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
	imports =
		[ (modulesPath + "/installer/scan/not-detected.nix")
		];

	boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
	boot.initrd.kernelModules = [ "dm-snapshot" ];
	boot.kernelModules = [ "kvm-intel" ];
	boot.extraModulePackages = [ ];

	fileSystems."/" =
		{ device = "/dev/disk/by-uuid/dc898387-ca5e-4e51-ac82-0db9d0ec0221";
			fsType = "ext4";
		};

	fileSystems."/boot" =
		{ device = "/dev/disk/by-uuid/0F8C-8C98";
			fsType = "vfat";
		};

	fileSystems."/var/lib/roon-server/RoonServer" =
		{ device = "/dev/vg/roondb";
			fsType = "ext4";
		};

	fileSystems."/roon-music" =
		{ device = "/dev/disk/by-uuid/ad097048-5f1e-4e22-8bb2-4e44631f76aa";
			fsType = "ext4";
		};


	swapDevices =
		[ { device = "/dev/disk/by-uuid/cccb0313-c426-4f9e-a3cd-a8facc87be38"; }
		];

	# Enables DHCP on each ethernet and wireless interface. In case of scripted networking
	# (the default) this is the recommended approach. When using systemd-networkd it's
	# still possible to use this option, but it's recommended to use it in conjunction
	# with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
	networking.useDHCP = lib.mkDefault true;
	# networking.interfaces.eno1.useDHCP = lib.mkDefault true;
	# networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;

	nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
	hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}

